generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearchPostgres"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int            @id @default(autoincrement())
  email           String         @unique
  firstName       String         @map("first_name")
  lastName        String         @map("last_name")
  patronymic      String?
  dateOfBirth     DateTime       @map("date_of_birth") @db.Date
  role            Role           @default(TEACHER)
  discipline      Discipline?    @relation(fields: [disciplineId], references: [id], onDelete: SetNull)
  disciplineId    Int?           @map("discipline_id")
  avatar          String?
  password        String?
  isEmailVerified Boolean        @default(false) @map("is_email_verified")
  isActive        Boolean        @default(false) @map("is_active")
  createdAt       DateTime       @default(now()) @map("created_at") @db.Timestamp
  updatedAt       DateTime       @updatedAt @map("updated_at") @db.Timestamp
  RefreshToken    RefreshToken[]

  @@map("users")
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  tokenId   String   @unique @db.Uuid
  expiresAt DateTime @map("expires_at") @db.Timestamp
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamp

  @@map("refresh_tokens")
}

model Discipline {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamp
  users     User[]

  @@map("disciplines")
}

enum Role {
  TEACHER
  VICE_PRINCIPAL
  ADMIN
}
